name: Code Quality & Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black flake8 mypy bandit safety
          
      - name: Check code formatting with Black
        run: |
          black --check --diff .
          
      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics --exclude=.venv,__pycache__,alembic/versions
          
      - name: Type check with mypy
        run: |
          mypy . --ignore-missing-imports || true
          
      - name: Security audit with bandit
        run: |
          bandit -r . -f json -o bandit-report.json || true
          
      - name: Check for known security vulnerabilities
        run: |
          safety check --json --output safety-report.json || true
          
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
          
      - name: Set up test environment
        run: |
          echo "Setting up test environment..."
          echo "TEST_DATABASE_URL=sqlite:///:memory:" > .env.test
          echo "DATABASE_URL=sqlite:///:memory:" >> .env.test
          
      - name: Run tests with coverage
        run: |
          export TEST_DATABASE_URL=sqlite:///:memory:
          export DATABASE_URL=sqlite:///:memory:
          python -m pytest tests/ --cov=. --cov-report=xml --cov-report=term-missing
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          
  build:
    name: Build & Package
    runs-on: ubuntu-latest
    needs: [quality, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          
      - name: Build package
        run: python -m build
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
