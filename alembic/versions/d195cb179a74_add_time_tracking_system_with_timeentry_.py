"""Add time tracking system with TimeEntry model

Revision ID: d195cb179a74
Revises: add_task_priority_enum
Create Date: 2025-09-01 22:06:11.601497

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d195cb179a74"
down_revision: Union[str, Sequence[str], None] = "add_task_priority_enum"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "time_entries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("start_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=True),
        sa.Column("duration_minutes", sa.Integer(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("active", "paused", "completed", name="time_entry_status"),
            server_default="active",
            nullable=False,
        ),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("category", sa.String(length=100), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_time_entries_id"), "time_entries", ["id"], unique=False)
    op.create_index(
        "ix_time_entries_owner_date",
        "time_entries",
        ["owner_id", "start_time"],
        unique=False,
    )
    op.create_index(
        op.f("ix_time_entries_owner_id"), "time_entries", ["owner_id"], unique=False
    )
    op.create_index(
        "ix_time_entries_owner_status",
        "time_entries",
        ["owner_id", "status"],
        unique=False,
    )
    op.create_index(
        op.f("ix_time_entries_start_time"), "time_entries", ["start_time"], unique=False
    )
    op.create_index(
        op.f("ix_time_entries_status"), "time_entries", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_time_entries_task_id"), "time_entries", ["task_id"], unique=False
    )
    op.create_index(
        "ix_time_entries_task_start",
        "time_entries",
        ["task_id", "start_time"],
        unique=False,
    )
    op.alter_column(
        "tasks",
        "priority",
        existing_type=postgresql.ENUM(
            "low", "medium", "high", "urgent", name="task_priority"
        ),
        server_default="medium",
        existing_nullable=False,
    )
    op.drop_index("ix_tasks_category", table_name="tasks")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index("ix_tasks_category", "tasks", ["category"], unique=False)
    op.alter_column(
        "tasks",
        "priority",
        existing_type=postgresql.ENUM(
            "low", "medium", "high", "urgent", name="task_priority"
        ),
        server_default=None,
        existing_nullable=False,
    )
    op.drop_index("ix_time_entries_task_start", table_name="time_entries")
    op.drop_index(op.f("ix_time_entries_task_id"), table_name="time_entries")
    op.drop_index(op.f("ix_time_entries_status"), table_name="time_entries")
    op.drop_index(op.f("ix_time_entries_start_time"), table_name="time_entries")
    op.drop_index("ix_time_entries_owner_status", table_name="time_entries")
    op.drop_index(op.f("ix_time_entries_owner_id"), table_name="time_entries")
    op.drop_index("ix_time_entries_owner_date", table_name="time_entries")
    op.drop_index(op.f("ix_time_entries_id"), table_name="time_entries")
    op.drop_table("time_entries")
    # ### end Alembic commands ###
